from distutils import dir_util
from pathlib import Path

from invoke import task, Context


@task
def dbt_compile(c):
    with c.cd('./docs_snippets'):
        c.run('dbt clean')
        c.run('dbt compile --full-refresh')


@task(pre=[dbt_compile])
def copy_samples(c):
    src_dir = './docs_snippets/target/compiled/docs_snippets/models/'
    tgt_dir = './docs/assets/snippets'

    if Path(tgt_dir).exists():
        dir_util.remove_tree(tgt_dir)

    dir_util.copy_tree(src_dir, tgt_dir)

    for path in Path(tgt_dir).rglob('*.sql'):
        with open(path, "r") as f:
            lines = f.readlines()

        delete_linebreak = True

        with open(path, 'w') as f:
            for line in lines:
                if "-- Generated by dbtvault." not in line and not line.isspace():
                    f.write(line)
                elif delete_linebreak and line.isspace():
                    pass
                elif "-- Generated by dbtvault." in line:
                    pass
                else:
                    f.write(line)
                    delete_linebreak = False


if __name__ == '__main__':
    copy_samples(Context())
